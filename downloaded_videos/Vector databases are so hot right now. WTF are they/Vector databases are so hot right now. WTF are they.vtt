WEBVTT

1
00:00:00.000 --> 00:00:03.590
[en]it <00:00:00.004>is <00:00:00.008>April <00:00:00.012>7 <00:00:00.016>2023 <00:00:00.020>and <00:00:00.024>you're <00:00:00.028>watching  <00:00:00.032>the <00:00:00.036>code <00:00:00.040>report <00:00:00.044>one <00:00:00.048>month <00:00:00.052>ago <00:00:00.056>Vector  <00:00:00.060>database <00:00:00.064>weeviate <00:00:00.068>landed <00:00:00.072>16 <00:00:00.076>million  <00:00:00.080>dollars <00:00:00.084>in <00:00:00.088>series <00:00:00.092>a <00:00:00.096>funding <00:00:00.100>last <00:00:00.104>week  <00:00:00.108>Pinecone <00:00:00.112>DB <00:00:00.116>just <00:00:00.120>got <00:00:00.124>a <00:00:00.128>check <00:00:00.132>for <00:00:00.136>28  <00:00:00.140>million <00:00:00.144>at <00:00:00.148>a <00:00:00.152>700 <00:00:00.156>million <00:00:00.160>valuation <00:00:00.164>and  <00:00:00.168>yesterday <00:00:00.172>chroma <00:00:00.176>an <00:00:00.180>open <00:00:00.184>source <00:00:00.188>project  <00:00:00.192>with <00:00:00.196>only <00:00:00.200>1.2 <00:00:00.204>GitHub <00:00:00.208>Stars <00:00:00.212>raised <00:00:00.216>18  <00:00:00.220>million <00:00:00.224>for <00:00:00.228>its <00:00:00.232>embeddings <00:00:00.236>database <00:00:00.240>and  <00:00:00.244>I <00:00:00.248>just <00:00:00.252>launched <00:00:00.256>my <00:00:00.260>own <00:00:00.264>Vector <00:00:00.268>database  <00:00:00.272>this <00:00:00.276>morning <00:00:00.280>we're <00:00:00.284>currently <00:00:00.288>pre-revenue  <00:00:00.292>pre-vision <00:00:00.296>and <00:00:00.300>pre-code <00:00:00.304>and <00:00:00.308>valued <00:00:00.312>at  <00:00:00.316>420 <00:00:00.320>million <00:00:00.324>dollars <00:00:00.328>leave <00:00:00.332>your <00:00:00.336>credit  <00:00:00.340>card <00:00:00.344>details <00:00:00.348>in <00:00:00.352>the <00:00:00.356>comments <00:00:00.360>if <00:00:00.364>you'd  <00:00:00.368>like <00:00:00.372>to <00:00:00.376>invest <00:00:00.380>but <00:00:00.384>you <00:00:00.388>might <00:00:00.392>be  <00:00:00.396>wondering <00:00:00.400>what <00:00:00.404>the <00:00:00.408>hell <00:00:00.412>is <00:00:00.416>a <00:00:00.420>vector  <00:00:00.424>database <00:00:00.428>or <00:00:00.432>what <00:00:00.436>the <00:00:00.440>hell <00:00:00.444>is <00:00:00.448>a <00:00:00.452>vector  <00:00:00.456>even <00:00:00.460>well <00:00:00.464>that's <00:00:00.468>easy <00:00:00.472>a <00:00:00.476>vector <00:00:00.480>is <00:00:00.484>just  <00:00:00.488>an <00:00:00.492>array <00:00:00.496>of <00:00:00.500>numbers <00:00:00.504>but <00:00:00.508>what's <00:00:00.512>cool  <00:00:00.516>about <00:00:00.520>vectors <00:00:00.524>is <00:00:00.528>that <00:00:00.532>they <00:00:00.536>can <00:00:00.540>represent  <00:00:00.544>more <00:00:00.548>complex <00:00:00.552>objects <00:00:00.556>like <00:00:00.560>Words  <00:00:00.564>sentences <00:00:00.568>images <00:00:00.572>or <00:00:00.576>audio <00:00:00.580>files <00:00:00.584>in <00:00:00.588>a  <00:00:00.592>continuous <00:00:00.596>High <00:00:00.600>dimensional <00:00:00.604>space <00:00:00.608>called  <00:00:00.612>an <00:00:00.616>embedding <00:00:00.620>it's <00:00:00.624>kind <00:00:00.628>of <00:00:00.632>like <00:00:00.636>this <00:00:00.640>when  <00:00:00.644>you <00:00:00.648>go <00:00:00.652>to <00:00:00.656>a <00:00:00.660>party <00:00:00.664>all <00:00:00.668>of <00:00:00.672>the <00:00:00.676>jocks <00:00:00.680>sit  <00:00:00.684>around <00:00:00.688>the <00:00:00.692>TV <00:00:00.696>and <00:00:00.700>watch <00:00:00.704>football  <00:00:00.708>meanwhile <00:00:00.712>all <00:00:00.716>the <00:00:00.720>girls <00:00:00.724>find <00:00:00.728>the <00:00:00.732>Dance  <00:00:00.736>Floor <00:00:00.740>while <00:00:00.744>you <00:00:00.748>group <00:00:00.752>together <00:00:00.756>with <00:00:00.760>all  <00:00:00.764>the <00:00:00.768>programming <00:00:00.772>introverts <00:00:00.776>to <00:00:00.780>talk <00:00:00.784>about  <00:00:00.788>vectors <00:00:00.792>in <00:00:00.796>the <00:00:00.800>corner <00:00:00.804>notice <00:00:00.808>how <00:00:00.812>all <00:00:00.816>the  <00:00:00.820>similar <00:00:00.824>objects <00:00:00.828>are <00:00:00.832>grouped <00:00:00.836>together  <00:00:00.840>embeddings <00:00:00.844>work <00:00:00.848>the <00:00:00.852>same <00:00:00.856>way <00:00:00.860>except <00:00:00.864>they  <00:00:00.868>map <00:00:00.872>the <00:00:00.876>semantic <00:00:00.880>meaning <00:00:00.884>of <00:00:00.888>words  <00:00:00.892>together <00:00:00.896>or <00:00:00.900>similar <00:00:00.904>features <00:00:00.908>in  <00:00:00.912>virtually <00:00:00.916>any <00:00:00.920>other <00:00:00.924>data <00:00:00.928>type <00:00:00.932>these  <00:00:00.936>embeddings <00:00:00.940>can <00:00:00.944>then <00:00:00.948>be <00:00:00.952>used <00:00:00.956>for <00:00:00.960>things  <00:00:00.964>like <00:00:00.968>recommendation <00:00:00.972>systems <00:00:00.976>search  <00:00:00.980>engines <00:00:00.984>and <00:00:00.988>even <00:00:00.992>text <00:00:00.996>generation <00:00:01.000>like  <00:00:01.004>chat <00:00:01.008>GPT <00:00:01.012>but <00:00:01.016>once <00:00:01.020>you <00:00:01.024>have <00:00:01.028>your  <00:00:01.032>embeddings <00:00:01.036>the <00:00:01.040>question <00:00:01.044>becomes <00:00:01.048>where <00:00:01.052>do  <00:00:01.056>you <00:00:01.060>store <00:00:01.064>them <00:00:01.068>and <00:00:01.072>how <00:00:01.076>do <00:00:01.080>you <00:00:01.084>query <00:00:01.088>them  <00:00:01.092>quickly <00:00:01.096>that's <00:00:01.100>where <00:00:01.104>Vector <00:00:01.108>databases  <00:00:01.112>come <00:00:01.116>in <00:00:01.120>in <00:00:01.124>a <00:00:01.128>relational <00:00:01.132>database <00:00:01.136>you  <00:00:01.140>have <00:00:01.144>rows <00:00:01.148>and <00:00:01.152>columns <00:00:01.156>in <00:00:01.160>a <00:00:01.164>document  <00:00:01.168>database <00:00:01.172>you <00:00:01.176>have <00:00:01.180>documents <00:00:01.184>and  <00:00:01.188>collections <00:00:01.192>but <00:00:01.196>in <00:00:01.200>a <00:00:01.204>vector <00:00:01.208>database <00:00:01.212>you  <00:00:01.216>have <00:00:01.220>arrays <00:00:01.224>of <00:00:01.228>numbers <00:00:01.232>clustered  <00:00:01.236>together <00:00:01.240>based <00:00:01.244>on <00:00:01.248>similarity <00:00:01.252>which <00:00:01.256>can  <00:00:01.260>be <00:00:01.264>queried <00:00:01.268>with <00:00:01.272>ultra <00:00:01.276>low <00:00:01.280>latency <00:00:01.284>making  <00:00:01.288>it <00:00:01.292>an <00:00:01.296>ideal <00:00:01.300>choice <00:00:01.304>for <00:00:01.308>AI <00:00:01.312>driven  <00:00:01.316>applications <00:00:01.320>relational <00:00:01.324>databases <00:00:01.328>like  <00:00:01.332>postgres <00:00:01.336>have <00:00:01.340>tools <00:00:01.344>like <00:00:01.348>PG <00:00:01.352>Vector <00:00:01.356>to  <00:00:01.360>support <00:00:01.364>this <00:00:01.368>type <00:00:01.372>of <00:00:01.376>functionality <00:00:01.380>and  <00:00:01.384>redis <00:00:01.388>also <00:00:01.392>has <00:00:01.396>first <00:00:01.400>class <00:00:01.404>Vector  <00:00:01.408>support <00:00:01.412>but <00:00:01.416>a <00:00:01.420>bunch <00:00:01.424>of <00:00:01.428>new <00:00:01.432>native <00:00:01.436>Vector  <00:00:01.440>databases <00:00:01.444>are <00:00:01.448>popping <00:00:01.452>up <00:00:01.456>like <00:00:01.460>weeviate  <00:00:01.464>and <00:00:01.468>milvis <00:00:01.472>are <00:00:01.476>open <00:00:01.480>source <00:00:01.484>options  <00:00:01.488>written <00:00:01.492>in <00:00:01.496>go <00:00:01.500>then <00:00:01.504>you <00:00:01.508>have <00:00:01.512>Pinecone  <00:00:01.516>which <00:00:01.520>is <00:00:01.524>extremely <00:00:01.528>popular <00:00:01.532>but <00:00:01.536>is <00:00:01.540>not  <00:00:01.544>open <00:00:01.548>source <00:00:01.552>then <00:00:01.556>you <00:00:01.560>have <00:00:01.564>Chromo <00:00:01.568>which  <00:00:01.572>is <00:00:01.576>based <00:00:01.580>on <00:00:01.584>clickhouse <00:00:01.588>under <00:00:01.592>the <00:00:01.596>hood  <00:00:01.600>and <00:00:01.604>many <00:00:01.608>other <00:00:01.612>options <00:00:01.616>from <00:00:01.620>there <00:00:01.624>let's  <00:00:01.628>jump <00:00:01.632>into <00:00:01.636>some <00:00:01.640>code <00:00:01.644>to <00:00:01.648>see <00:00:01.652>what <00:00:01.656>it <00:00:01.660>looks  <00:00:01.664>like <00:00:01.668>here <00:00:01.672>I'm <00:00:01.676>using <00:00:01.680>chroma <00:00:01.684>and  <00:00:01.688>JavaScript <00:00:01.692>and <00:00:01.696>the <00:00:01.700>first <00:00:01.704>thing <00:00:01.708>I <00:00:01.712>I'll <00:00:01.716>do  <00:00:01.720>is <00:00:01.724>create <00:00:01.728>the <00:00:01.732>client <00:00:01.736>then <00:00:01.740>Define <00:00:01.744>an  <00:00:01.748>embedding <00:00:01.752>function <00:00:01.756>in <00:00:01.760>this <00:00:01.764>case <00:00:01.768>it <00:00:01.772>will  <00:00:01.776>use <00:00:01.780>the <00:00:01.784>openai <00:00:01.788>API <00:00:01.792>to <00:00:01.796>update <00:00:01.800>the  <00:00:01.804>embeddings <00:00:01.808>whenever <00:00:01.812>a <00:00:01.816>new <00:00:01.820>data <00:00:01.824>point <00:00:01.828>is  <00:00:01.832>added <00:00:01.836>each <00:00:01.840>data <00:00:01.844>point <00:00:01.848>is <00:00:01.852>just <00:00:01.856>a <00:00:01.860>document  <00:00:01.864>with <00:00:01.868>an <00:00:01.872>IDE <00:00:01.876>and <00:00:01.880>some <00:00:01.884>text <00:00:01.888>and <00:00:01.892>finally <00:00:01.896>we  <00:00:01.900>can <00:00:01.904>query <00:00:01.908>the <00:00:01.912>database <00:00:01.916>by <00:00:01.920>passing <00:00:01.924>a  <00:00:01.928>string <00:00:01.932>of <00:00:01.936>text <00:00:01.940>just <00:00:01.944>like <00:00:01.948>an <00:00:01.952>llm <00:00:01.956>what's  <00:00:01.960>most <00:00:01.964>interesting <00:00:01.968>though <00:00:01.972>is <00:00:01.976>that <00:00:01.980>in <00:00:01.984>the  <00:00:01.988>query <00:00:01.992>result <00:00:01.996>we <00:00:02.000>get <00:00:02.004>the <00:00:02.008>data <00:00:02.012>back <00:00:02.016>in  <00:00:02.020>addition <00:00:02.024>to <00:00:02.028>an <00:00:02.032>array <00:00:02.036>of <00:00:02.040>distances <00:00:02.044>with <00:00:02.048>a  <00:00:02.052>smaller <00:00:02.056>number <00:00:02.060>indicating <00:00:02.064>a <00:00:02.068>higher  <00:00:02.072>degree <00:00:02.076>of <00:00:02.080>similarity <00:00:02.084>that's <00:00:02.088>pretty <00:00:02.092>cool  <00:00:02.096>but <00:00:02.100>the <00:00:02.104>real <00:00:02.108>reason <00:00:02.112>that <00:00:02.116>these <00:00:02.120>databases  <00:00:02.124>are <00:00:02.128>so <00:00:02.132>hot <00:00:02.136>right <00:00:02.140>now <00:00:02.144>is <00:00:02.148>that <00:00:02.152>they <00:00:02.156>can  <00:00:02.160>extend <00:00:02.164>llms <00:00:02.168>with <00:00:02.172>long-term <00:00:02.176>memory <00:00:02.180>you  <00:00:02.184>start <00:00:02.188>with <00:00:02.192>a <00:00:02.196>general <00:00:02.200>purpose <00:00:02.204>model <00:00:02.208>like  <00:00:02.212>open <00:00:02.216>ai's <00:00:02.220>gpt4 <00:00:02.224>metaslama <00:00:02.228>or <00:00:02.232>Google's  <00:00:02.236>Lambda <00:00:02.240>then <00:00:02.244>provide <00:00:02.248>your <00:00:02.252>own <00:00:02.256>data <00:00:02.260>in <00:00:02.264>a  <00:00:02.268>vector <00:00:02.272>database <00:00:02.276>when <00:00:02.280>the <00:00:02.284>user <00:00:02.288>makes <00:00:02.292>a  <00:00:02.296>prompt <00:00:02.300>you <00:00:02.304>can <00:00:02.308>then <00:00:02.312>query <00:00:02.316>relevant  <00:00:02.320>documents <00:00:02.324>from <00:00:02.328>your <00:00:02.332>own <00:00:02.336>database <00:00:02.340>to  <00:00:02.344>update <00:00:02.348>the <00:00:02.352>context <00:00:02.356>which <00:00:02.360>will <00:00:02.364>customize  <00:00:02.368>the <00:00:02.372>final <00:00:02.376>response <00:00:02.380>and <00:00:02.384>it <00:00:02.388>can <00:00:02.392>also  <00:00:02.396>retrieve <00:00:02.400>historical <00:00:02.404>data <00:00:02.408>to <00:00:02.412>give <00:00:02.416>the <00:00:02.420>AI  <00:00:02.424>long-term <00:00:02.428>memory <00:00:02.432>in <00:00:02.436>addition <00:00:02.440>they <00:00:02.444>also  <00:00:02.448>integrate <00:00:02.452>with <00:00:02.456>tools <00:00:02.460>like <00:00:02.464>link <00:00:02.468>chain  <00:00:02.472>that <00:00:02.476>combine <00:00:02.480>multiple <00:00:02.484>llms <00:00:02.488>together <00:00:02.492>it's  <00:00:02.496>all <00:00:02.500>pretty <00:00:02.504>crazy <00:00:02.508>and <00:00:02.512>I'm <00:00:02.516>working <00:00:02.520>on <00:00:02.524>a  <00:00:02.528>tutorial <00:00:02.532>on <00:00:02.536>my <00:00:02.540>second <00:00:02.544>Channel <00:00:02.548>with <00:00:02.552>Wii  <00:00:02.556>V8 <00:00:02.560>so <00:00:02.564>make <00:00:02.568>sure <00:00:02.572>to <00:00:02.576>subscribe <00:00:02.580>over <00:00:02.584>there  <00:00:02.588>if <00:00:02.592>you <00:00:02.596>really <00:00:02.600>want <00:00:02.604>to <00:00:02.608>dive <00:00:02.612>into <00:00:02.616>this  <00:00:02.620>stuff <00:00:02.624>and <00:00:02.628>lastly <00:00:02.632>in <00:00:02.636>related <00:00:02.640>news <00:00:02.644>if <00:00:02.648>you  <00:00:02.652>check <00:00:02.656>out <00:00:02.660>the <00:00:02.664>top <00:00:02.668>training <00:00:02.672>repos <00:00:02.676>in  <00:00:02.680>GitHub <00:00:02.684>today <00:00:02.688>they're <00:00:02.692>almost <00:00:02.696>all <00:00:02.700>trying  <00:00:02.704>to <00:00:02.708>create <00:00:02.712>artificial <00:00:02.716>general  <00:00:02.720>intelligence <00:00:02.724>like <00:00:02.728>Microsoft's <00:00:02.732>Jarvis  <00:00:02.736>Auto <00:00:02.740>GPT <00:00:02.744>and <00:00:02.748>baby <00:00:02.752>AGI <00:00:02.756>which <00:00:02.760>are <00:00:02.764>tools  <00:00:02.768>that <00:00:02.772>use <00:00:02.776>Vector <00:00:02.780>databases <00:00:02.784>and <00:00:02.788>llms <00:00:02.792>to  <00:00:02.796>prove <00:00:02.800>themselves <00:00:02.804>and <00:00:02.808>this <00:00:02.812>is <00:00:02.816>terrifying  <00:00:02.820>as <00:00:02.824>someone <00:00:02.828>who <00:00:02.832>just <00:00:02.836>became <00:00:02.840>a <00:00:02.844>proofed  <00:00:02.848>engineer <00:00:02.852>I <00:00:02.856>never <00:00:02.860>thought <00:00:02.864>I'd <00:00:02.868>become  <00:00:02.872>obsolete <00:00:02.876>twice <00:00:02.880>in <00:00:02.884>one <00:00:02.888>month <00:00:02.892>this <00:00:02.896>has  <00:00:02.900>been <00:00:02.904>the <00:00:02.908>code <00:00:02.912>report <00:00:02.916>thanks <00:00:02.920>for <00:00:02.924>watching  <00:00:02.928>and <00:00:02.932>I <00:00:02.936>will <00:00:02.940>see <00:00:02.944>you <00:00:02.948>in <00:00:02.952>the <00:00:02.956>next <00:00:02.960>one
[zh]现在<00:00:00.294>是 <00:00:00.588>2023 <00:00:00.882>年 <00:00:01.176>4 <00:00:01.470>月 <00:00:01.764>7 <00:00:02.058>日<00:00:02.352>，<00:00:02.646>您<00:00:02.940>正在<00:00:03.234>观看

2
00:00:03.590 --> 00:00:05.570
[en]it is April 7 2023 and you're watching  the code report one month ago Vector  database weeviate landed 16 million  dollars in series a funding last week  Pinecone DB just got a check for 28  million at a 700 million valuation and  yesterday chroma an open source project  with only 1.2 GitHub Stars raised 18  million for its embeddings database and  I just launched my own Vector database  this morning we're currently pre-revenue  pre-vision and pre-code and valued at  420 million dollars leave your credit  card details in the comments if you'd  like to invest but you might be  wondering what the hell is a vector  database or what the hell is a vector  even well that's easy a vector is just  an array of numbers but what's cool  about vectors is that they can represent  more complex objects like Words  sentences images or audio files in a  continuous High dimensional space called  an embedding it's kind of like this when  you go to a party all of the jocks sit  around the TV and watch football  meanwhile all the girls find the Dance  Floor while you group together with all  the programming introverts to talk about  vectors in the corner notice how all the  similar objects are grouped together  embeddings work the same way except they  map the semantic meaning of words  together or similar features in  virtually any other data type these  embeddings can then be used for things  like recommendation systems search  engines and even text generation like  chat GPT but once you have your  embeddings the question becomes where do  you store them and how do you query them  quickly that's where Vector databases  come in in a relational database you  have rows and columns in a document  database you have documents and  collections but in a vector database you  have arrays of numbers clustered  together based on similarity which can  be queried with ultra low latency making  it an ideal choice for AI driven  applications relational databases like  postgres have tools like PG Vector to  support this type of functionality and  redis also has first class Vector  support but a bunch of new native Vector  databases are popping up like weeviate  and milvis are open source options  written in go then you have Pinecone  which is extremely popular but is not  open source then you have Chromo which  is based on clickhouse under the hood  and many other options from there let's  jump into some code to see what it looks  like here I'm using chroma and  JavaScript and the first thing I I'll do  is create the client then Define an  embedding function in this case it will  use the openai API to update the  embeddings whenever a new data point is  added each data point is just a document  with an IDE and some text and finally we  can query the database by passing a  string of text just like an llm what's  most interesting though is that in the  query result we get the data back in  addition to an array of distances with a  smaller number indicating a higher  degree of similarity that's pretty cool  but the real reason that these databases  are so hot right now is that they can  extend llms with long-term memory you  start with a general purpose model like  open ai's gpt4 metaslama or Google's  Lambda then provide your own data in a  vector database when the user makes a  prompt you can then query relevant  documents from your own database to  update the context which will customize  the final response and it can also  retrieve historical data to give the AI  long-term memory in addition they also  integrate with tools like link chain  that combine multiple llms together it's  all pretty crazy and I'm working on a  tutorial on my second Channel with Wii  V8 so make sure to subscribe over there  if you really want to dive into this  stuff and lastly in related news if you  check out the top training repos in  GitHub today they're almost all trying  to create artificial general  intelligence like Microsoft's Jarvis  Auto GPT and baby AGI which are tools  that use Vector databases and llms to  prove themselves and this is terrifying  as someone who just became a proofed  engineer I never thought I'd become  obsolete twice in one month this has  been the code report thanks for watching  and I will see you in the next one
[zh]现在是 2023 年 4 月 7 日，您正在观看

3
00:00:05.570 --> 00:00:07.730
[en]
[zh]现在是 2023 年 4 月 7 日，您正在观看
一<00:00:03.822>个<00:00:04.044>月<00:00:04.266>前<00:00:04.488>的<00:00:04.710>代码<00:00:04.932>报告 <00:00:05.154>Vector

4
00:00:07.730 --> 00:00:09.710
[en]
[zh]一个月前的代码报告 Vector

5
00:00:09.710 --> 00:00:12.169
[en]
[zh]一个月前的代码报告 Vector
数据库 <00:00:05.819>weeviate <00:00:06.058>上<00:00:06.297>周<00:00:06.536>获得<00:00:06.775>了 <00:00:07.014>1600 <00:00:07.253>万

6
00:00:12.169 --> 00:00:14.690
[en]
[zh]数据库 weeviate 上周获得了 1600 万

7
00:00:14.690 --> 00:00:16.910
[en]
[zh]数据库 weeviate 上周获得了 1600 万
美元<00:00:08.190>的 <00:00:08.640>a <00:00:09.090>轮<00:00:09.540>融资

8
00:00:16.910 --> 00:00:19.609
[en]
[zh]美元的 a 轮融资

9
00:00:19.609 --> 00:00:21.830
[en]
[zh]美元的 a 轮融资
Pinecone <00:00:09.847>DB <00:00:09.974>刚刚<00:00:10.101>以 <00:00:10.228>7 <00:00:10.355>亿<00:00:10.482>美元<00:00:10.609>的<00:00:10.736>估值<00:00:10.863>获得<00:00:10.990>了 <00:00:11.117>2800 <00:00:11.244>万<00:00:11.371>美元<00:00:11.498>的<00:00:11.625>支票<00:00:11.752>，

10
00:00:21.830 --> 00:00:23.390
[en]
[zh]Pinecone DB 刚刚以 7 亿美元的估值获得了 2800 万美元的支票，

11
00:00:23.390 --> 00:00:24.950
[en]
[zh]

12
00:00:24.950 --> 00:00:27.050
[en]
[zh]昨天 <00:00:15.040>chroma <00:00:15.380>是<00:00:15.720>一<00:00:16.060>个<00:00:16.400>开源<00:00:16.740>项目

13
00:00:27.050 --> 00:00:29.029
[en]
[zh]昨天 chroma 是一个开源项目

14
00:00:29.029 --> 00:00:30.470
[en]
[zh]昨天 chroma 是一个开源项目
只<00:00:17.550>有 <00:00:18.180>1.2 <00:00:18.810>GitHub <00:00:19.440>Stars

15
00:00:30.470 --> 00:00:31.730
[en]
[zh]只有 1.2 GitHub Stars

16
00:00:31.730 --> 00:00:33.470
[en]
[zh]只有 1.2 GitHub Stars
为<00:00:19.819>其<00:00:20.019>嵌入<00:00:20.219>数据库<00:00:20.419>筹集<00:00:20.619>了 <00:00:20.819>1800 <00:00:21.019>万<00:00:21.219>美元<00:00:21.419>，

17
00:00:33.470 --> 00:00:35.209
[en]
[zh]为其嵌入数据库筹集了 1800 万美元，

18
00:00:35.209 --> 00:00:37.190
[en]
[zh]为其嵌入数据库筹集了 1800 万美元，
我<00:00:21.949>今天<00:00:22.058>早上<00:00:22.167>刚刚<00:00:22.276>推出<00:00:22.385>了<00:00:22.494>我<00:00:22.603>自己<00:00:22.712>的 <00:00:22.821>Vector <00:00:22.930>数据库<00:00:23.039>，

19
00:00:37.190 --> 00:00:38.810
[en]
[zh]我今天早上刚刚推出了我自己的 Vector 数据库，

20
00:00:38.810 --> 00:00:40.369
[en]
[zh]我今天早上刚刚推出了我自己的 Vector 数据库，
我们<00:00:23.655>目前<00:00:23.910>正在<00:00:24.165>进行<00:00:24.420>预收入

21
00:00:40.369 --> 00:00:42.229
[en]
[zh]我们目前正在进行预收入

22
00:00:42.229 --> 00:00:45.170
[en]
[zh]我们目前正在进行预收入
预视<00:00:25.454>和<00:00:25.948>预编码<00:00:26.442>，<00:00:26.936>价值

23
00:00:45.170 --> 00:00:46.910
[en]
[zh]预视和预编码，价值

24
00:00:46.910 --> 00:00:48.709
[en]
[zh]预视和预编码，价值
4.2 <00:00:27.680>亿<00:00:28.300>美元 <00:00:28.920>请

25
00:00:48.709 --> 00:00:50.569
[en]
[zh]4.2 亿美元 请

26
00:00:50.569 --> 00:00:51.650
[en]
[zh]4.2 亿美元 请
在<00:00:29.165>评论<00:00:29.291>中<00:00:29.417>留下<00:00:29.543>您<00:00:29.669>的<00:00:29.795>信用卡<00:00:29.921>详细<00:00:30.047>信息 <00:00:30.173>如果<00:00:30.299>您

27
00:00:51.650 --> 00:00:53.510
[en]
[zh]在评论中留下您的信用卡详细信息 如果您

28
00:00:53.510 --> 00:00:55.130
[en]
[zh]在评论中留下您的信用卡详细信息 如果您
想<00:00:30.660>投资<00:00:30.840>，<00:00:31.020>但<00:00:31.200>您<00:00:31.380>可能<00:00:31.560>想

29
00:00:55.130 --> 00:00:56.689
[en]
[zh]想投资，但您可能想

30
00:00:56.689 --> 00:00:58.549
[en]
[zh]想投资，但您可能想
知道<00:00:31.970>向量<00:00:32.200>数据库<00:00:32.430>到底<00:00:32.660>是<00:00:32.890>什么<00:00:33.120>，

31
00:00:58.549 --> 00:00:59.930
[en]
[zh]知道向量数据库到底是什么，

32
00:00:59.930 --> 00:01:02.270
[en]
[zh]知道向量数据库到底是什么，
或者<00:00:33.677>向量<00:00:33.874>到底<00:00:34.071>是<00:00:34.268>什么<00:00:34.465>，<00:00:34.662>这<00:00:34.859>很

33
00:01:02.270 --> 00:01:03.709
[en]
[zh]或者向量到底是什么，这很

34
00:01:03.709 --> 00:01:05.390
[en]
[zh]或者向量到底是什么，这很
简单<00:00:35.579>，<00:00:35.939>向<00:00:36.299>量<00:00:36.659>只<00:00:37.019>是

35
00:01:05.390 --> 00:01:07.010
[en]
[zh]简单，向量只是

36
00:01:07.010 --> 00:01:08.330
[en]
[zh]简单，向量只是
一<00:00:37.440>个<00:00:37.680>数字<00:00:37.920>数<00:00:38.160>组<00:00:38.400>，<00:00:38.640>但

37
00:01:08.330 --> 00:01:10.190
[en]
[zh]一个数字数组，但

38
00:01:10.190 --> 00:01:12.109
[en]
[zh]一个数字数组，但
向量<00:00:39.020>的<00:00:39.220>妙处<00:00:39.420>在于<00:00:39.620>它们<00:00:39.820>可以<00:00:40.020>表示

39
00:01:12.109 --> 00:01:14.030
[en]
[zh]向量的妙处在于它们可以表示

40
00:01:14.030 --> 00:01:15.950
[en]
[zh]向量的妙处在于它们可以表示
更<00:00:40.639>复杂<00:00:40.899>的<00:00:41.159>内容 <00:00:41.419>连续<00:00:41.679>高维<00:00:41.939>空间

41
00:01:15.950 --> 00:01:17.450
[en]
[zh]更复杂的内容 连续高维空间

42
00:01:17.450 --> 00:01:19.310
[en]
[zh]更复杂的内容 连续高维空间
中<00:00:42.490>的<00:00:42.741>单词<00:00:42.992>、<00:00:43.243>句子<00:00:43.494>、<00:00:43.745>图像<00:00:43.996>或<00:00:44.247>音频<00:00:44.498>文件<00:00:44.749>等<00:00:45.000>对象

43
00:01:19.310 --> 00:01:21.109
[en]
[zh]中的单词、句子、图像或音频文件等对象

44
00:01:21.109 --> 00:01:22.910
[en]
[zh]中的单词、句子、图像或音频文件等对象
称为

45
00:01:22.910 --> 00:01:24.350
[en]
[zh]称为

46
00:01:24.350 --> 00:01:26.450
[en]
[zh]称为
嵌入<00:00:47.420>，<00:00:47.920>就<00:00:48.420>像

47
00:01:26.450 --> 00:01:28.010
[en]
[zh]嵌入，就像

48
00:01:28.010 --> 00:01:29.870
[en]
[zh]嵌入，就像
你<00:00:48.871>去<00:00:49.023>参加<00:00:49.175>派<00:00:49.327>对<00:00:49.479>时<00:00:49.631>所有<00:00:49.783>的<00:00:49.935>运动员<00:00:50.087>都<00:00:50.239>围<00:00:50.391>坐

49
00:01:29.870 --> 00:01:31.910
[en]
[zh]你去参加派对时所有的运动员都围坐

50
00:01:31.910 --> 00:01:33.649
[en]
[zh]你去参加派对时所有的运动员都围坐
在<00:00:50.759>电视<00:00:50.939>旁<00:00:51.119>看<00:00:51.299>足球<00:00:51.479>，

51
00:01:33.649 --> 00:01:35.510
[en]
[zh]在电视旁看足球，

52
00:01:35.510 --> 00:01:37.789
[en]
[zh]在电视旁看足球，
同时<00:00:51.996>所有<00:00:52.332>的<00:00:52.668>女孩<00:00:53.004>都<00:00:53.340>在

53
00:01:37.789 --> 00:01:39.410
[en]
[zh]同时所有的女孩都在

54
00:01:39.410 --> 00:01:41.210
[en]
[zh]同时所有的女孩都在
你<00:00:53.770>组队<00:00:54.020>时<00:00:54.270>找到<00:00:54.520>舞池 <00:00:54.770>和<00:00:55.020>所有

55
00:01:41.210 --> 00:01:43.010
[en]
[zh]你组队时找到舞池 和所有

56
00:01:43.010 --> 00:01:45.050
[en]
[zh]你组队时找到舞池 和所有
编程<00:00:55.499>内向<00:00:55.858>的<00:00:56.217>人<00:00:56.576>一起

57
00:01:45.050 --> 00:01:46.670
[en]
[zh]编程内向的人一起

58
00:01:46.670 --> 00:01:48.469
[en]
[zh]编程内向的人一起
在<00:00:57.047>角落里<00:00:57.395>谈论<00:00:57.743>向量 <00:00:58.091>注意<00:00:58.439>所有

59
00:01:48.469 --> 00:01:50.330
[en]
[zh]在角落里谈论向量 注意所有

60
00:01:50.330 --> 00:01:52.130
[en]
[zh]在角落里谈论向量 注意所有
相似<00:00:58.721>的<00:00:58.883>对象<00:00:59.045>是<00:00:59.207>如何<00:00:59.369>组合<00:00:59.531>在一起<00:00:59.693>的

61
00:01:52.130 --> 00:01:53.569
[en]
[zh]相似的对象是如何组合在一起的

62
00:01:53.569 --> 00:01:55.609
[en]
[zh]

63
00:01:55.609 --> 00:01:57.350
[en]
[zh]

64
00:01:57.350 --> 00:01:58.730
[en]
[zh]

65
00:01:58.730 --> 00:02:00.469
[en]
[zh]

66
00:02:00.469 --> 00:02:02.270
[en]
[zh]用<00:01:08.159>于

67
00:02:02.270 --> 00:02:04.010
[en]
[zh]用于

68
00:02:04.010 --> 00:02:06.230
[en]
[zh]用于

69
00:02:06.230 --> 00:02:08.029
[en]
[zh]

70
00:02:08.029 --> 00:02:09.949
[en]
[zh]推荐系统搜索

71
00:02:09.949 --> 00:02:12.530
[en]
[zh]推荐系统搜索
引擎<00:01:10.386>甚至<00:01:10.572>像<00:01:10.758>聊天 <00:01:10.944>GPT <00:01:11.130>这样<00:01:11.316>的<00:01:11.502>文本<00:01:11.688>生成<00:01:11.874>，

72
00:02:12.530 --> 00:02:14.270
[en]
[zh]引擎甚至像聊天 GPT 这样的文本生成，

73
00:02:14.270 --> 00:02:16.309
[en]
[zh]引擎甚至像聊天 GPT 这样的文本生成，
但是<00:01:12.554>一旦<00:01:12.989>你<00:01:13.424>有<00:01:13.859>了

74
00:02:16.309 --> 00:02:17.930
[en]
[zh]但是一旦你有了

75
00:02:17.930 --> 00:02:19.910
[en]
[zh]但是一旦你有了
嵌入<00:01:14.400>，<00:01:14.760>问题<00:01:15.120>就<00:01:15.480>变成<00:01:15.840>了

76
00:02:19.910 --> 00:02:22.130
[en]
[zh]嵌入，问题就变成了

77
00:02:22.130 --> 00:02:23.690
[en]
[zh]嵌入，问题就变成了
你<00:01:16.086>在<00:01:16.212>哪里<00:01:16.338>存储<00:01:16.464>它们<00:01:16.590>以及<00:01:16.716>你<00:01:16.842>如何<00:01:16.968>快速<00:01:17.094>查询<00:01:17.220>它们

78
00:02:23.690 --> 00:02:25.430
[en]
[zh]你在哪里存储它们以及你如何快速查询它们

79
00:02:25.430 --> 00:02:27.170
[en]
[zh]你在哪里存储它们以及你如何快速查询它们
这<00:01:17.820>就<00:01:18.180>是 <00:01:18.540>Vector <00:01:18.900>数据库

80
00:02:27.170 --> 00:02:28.670
[en]
[zh]这就是 Vector 数据库

81
00:02:28.670 --> 00:02:30.710
[en]
[zh]这就是 Vector 数据库
进入<00:01:19.620>关系<00:01:19.920>数据库<00:01:20.220>的<00:01:20.520>地方<00:01:20.820>你

82
00:02:30.710 --> 00:02:32.270
[en]
[zh]进入关系数据库的地方你

83
00:02:32.270 --> 00:02:35.030
[en]
[zh]进入关系数据库的地方你
有<00:01:21.333>行<00:01:21.547>和 <00:01:21.761>文档<00:01:21.975>数据库<00:01:22.189>中<00:01:22.403>的<00:01:22.617>列

84
00:02:35.030 --> 00:02:36.770
[en]
[zh]有行和 文档数据库中的列

85
00:02:36.770 --> 00:02:38.330
[en]
[zh]有行和 文档数据库中的列

86
00:02:38.330 --> 00:02:39.770
[en]
[zh]

87
00:02:39.770 --> 00:02:41.390
[en]
[zh]有文档和

88
00:02:41.390 --> 00:02:43.250
[en]
[zh]有文档和
集合<00:01:24.577>，<00:01:24.794>但<00:01:25.011>在<00:01:25.228>矢量<00:01:25.445>数据库<00:01:25.662>中<00:01:25.879>，<00:01:26.096>你

89
00:02:43.250 --> 00:02:44.750
[en]
[zh]集合，但在矢量数据库中，你

90
00:02:44.750 --> 00:02:46.670
[en]
[zh]集合，但在矢量数据库中，你
有

91
00:02:46.670 --> 00:02:48.710
[en]
[zh]有

92
00:02:48.710 --> 00:02:50.150
[en]
[zh]有
基于<00:01:28.193>相似性<00:01:28.366>聚集<00:01:28.539>在<00:01:28.712>一起<00:01:28.885>的<00:01:29.058>数字<00:01:29.231>数<00:01:29.404>组<00:01:29.577>，<00:01:29.750>可以

93
00:02:50.150 --> 00:02:52.369
[en]
[zh]基于相似性聚集在一起的数字数组，可以

94
00:02:52.369 --> 00:02:53.869
[en]
[zh]基于相似性聚集在一起的数字数组，可以
以<00:01:30.111>超低<00:01:30.342>延迟<00:01:30.573>查询<00:01:30.804>，<00:01:31.035>使<00:01:31.266>其<00:01:31.497>成为

95
00:02:53.869 --> 00:02:55.490
[en]
[zh]以超低延迟查询，使其成为

96
00:02:55.490 --> 00:02:56.869
[en]
[zh]以超低延迟查询，使其成为
人工<00:01:32.125>智能<00:01:32.330>驱动<00:01:32.535>应用<00:01:32.740>程序<00:01:32.945>的<00:01:33.150>理想<00:01:33.355>选择

97
00:02:56.869 --> 00:02:58.130
[en]
[zh]人工智能驱动应用程序的理想选择

98
00:02:58.130 --> 00:02:59.869
[en]
[zh]人工智能驱动应用程序的理想选择
关系<00:01:34.199>数据库<00:01:34.739>，<00:01:35.279>如

99
00:02:59.869 --> 00:03:01.430
[en]
[zh]关系数据库，如

100
00:03:01.430 --> 00:03:02.930
[en]
[zh]关系数据库，如
postgres，<00:01:35.928>有 <00:01:36.336>PG <00:01:36.744>等<00:01:37.152>工具 <00:01:37.560>Vector

101
00:03:02.930 --> 00:03:03.949
[en]
[zh]postgres，有 PG 等工具 Vector

102
00:03:03.949 --> 00:03:05.930
[en]
[zh]postgres，有 PG 等工具 Vector
支持<00:01:38.019>这<00:01:38.239>种<00:01:38.459>类型<00:01:38.679>的<00:01:38.899>功能<00:01:39.119>，

103
00:03:05.930 --> 00:03:08.930
[en]
[zh]支持这种类型的功能，

104
00:03:08.930 --> 00:03:11.210
[en]
[zh]支持这种类型的功能，
redis <00:01:39.684>也<00:01:39.948>有<00:01:40.212>一流<00:01:40.476>的 <00:01:40.740>Vector

105
00:03:11.210 --> 00:03:13.009
[en]
[zh]redis 也有一流的 Vector

106
00:03:13.009 --> 00:03:14.509
[en]
[zh]redis 也有一流的 Vector
支持<00:01:41.399>，<00:01:41.578>但是<00:01:41.757>一<00:01:41.936>堆<00:01:42.115>新<00:01:42.294>的<00:01:42.473>原生 <00:01:42.652>Vector

107
00:03:14.509 --> 00:03:15.770
[en]
[zh]支持，但是一堆新的原生 Vector

108
00:03:15.770 --> 00:03:17.509
[en]
[zh]支持，但是一堆新的原生 Vector
数据库<00:01:43.308>正在<00:01:43.596>涌现<00:01:43.884>，<00:01:44.172>比如 <00:01:44.460>weeviate

109
00:03:17.509 --> 00:03:19.070
[en]
[zh]数据库正在涌现，比如 weeviate

110
00:03:19.070 --> 00:03:22.580
[en]
[zh]数据库正在涌现，比如 weeviate

